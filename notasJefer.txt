cliente de comandos de angular  , intalarlo de manera global, -g
npm i -g @angular/cli 


Verifica versión de Node: node -v

Verifica versión de npm: npm -v

Instala el CLI de Angular: npm -g @angular/cli

Verifica tu instalación: ng version

Crea tu primer proyecto: ng new my-project

Ejecuta el servidor de desarrollo: ng serve Dentro de la carpeta de tu proyecto.
ng serve -o este abre el navegador
ng serve -o --port=3500 este abre el navegador y que corra por el puerto que quiera yo
ng version revisar dentro del protecto las versiones de angular en las que se esta trabajando




==================================================================================================
estructura de un proyecto de angular

src -> corazon del codigo

.editorconfinfi -> configuraciones para equipos

tsconfig.json -> configuracion de versiones de js y tyjs y algunas configuraciones de angular 

angular.json -> manejhar diferentes ambientes, qa - desarrollo

.nvmrc -> la version en la que corre node





===================================================================================================
String interpolation

es la manera de asignar valores con la sintaxis 
{{name}}

con esta sintaxis se puede utilizar funciones de js
<h2>{{'Hola Mundo '.repeat(5)}}</h2>

===================================================================================================

variables que estan en el componente y hacer uso desde nuestro renderisado 

La ruta principal de angular es el siguiente donde se encuenta el html principal, renderisado de html
/home/cristal/Escritorio/Angular Platzy/my-store/src/app/app.component.html

app.component.ts es el archivo donde le dice a angular como comportarse
/home/cristal/Escritorio/Angular Platzy/my-store/src/app/app.component.ts
tambien indica a que template esta ligado, ejemplo este esta ligado a app.component.html

se declara 
export class AppComponent {
    name = 'Jefer';
    age = 18;
  } 
y desde el renderizado de html se puede hacer el uso de la propiedaddes de la clase


<h3>{{'Mi nombe es '+name+' y tengo '+age+ ' años'}}</h3>




===================================================================================================


Property binging
La forma de modificar atributos 
este se lo utiliza para modificar propiedades de atributos de html, estados, values
componente nuevo en el controlador 
btnDisabled = true;

export class AppComponent {
    name = 'Jefer';
    age = 18;
    img = 'w';
    btnDisabled = true;
  }

uso en el renderisado 
<button [disabled]="btnDisabled">Enviar</button>



=====================================================================================================

Event Binding de Angular
son eventos, al dar click ewn un boton va al componente y ejecuta el metodo que este asignado al click

el metodo  
  toggleButton(){
    this.btnDisabled = !this.btnDisabled;
  }

esta declarado dentro de la clase appacomponen

<button (click)="toggleButton()">Enviar a metodo de la clase</button>



==========================================================================================================
Data binding con ngModel

Esta funcionalidad funciona para no declarar cosas sino que intuitivamente mira que debe hacer
Importante recalcar que para hacer uso de ngModel debemos importar el “FormModule” y habilitar el mismo en app.module.ts

ngModel raliza un seguimiento del valor y el estado de validación de un control de formulario individual debido a las propiedades que hereda de FormControl es recomentado saber como funciona dicho proceso.

Podemos personalizar las validaciones que deberia tener un campo o el mismo formulario

Aqui utilizamos las variables de referencia (las que tienen el signo #) y debemos indicar que la variable debera tomar el valor del ngModel <<#nameInput=“ngModel”>>

Se pueden realizar las validaciones que normalmente encontramos en html y con “pattern” podemos especificar una comprobacion como exprecion regular

Podemos tener un flujo de datos unidireccional con [] o bidireccional con [()]

Acepta inputs

Cuando se utiliza el ngModel sin la etiqueta <form> es necesario proporcionar un “nombre de atributo” de manera que el control pueda ser registrado en el formulario padre bajo ese nombre.



=======================================================================================================
Uso de *ngIf

estructuras de contro, para saber si se valida un bloque de html para mostrarlo o no


<div >
    <h1>Contenido para mostrar *ngif</h1>
    <input type="text" [(ngModel)]="persona.name"> <!-- hay que habilitar el paquede de formodel de agunlar para hacer uso de esta funcion  -->

    <p *ngIf="persona.name === 'Jeferson'">Es igual a jeferson</p>
    <p *ngIf="persona.name !== 'Jeferson'">Es diferente a jeferson</p>
</div>



=============================

*NGFOR
hacer el recorrido de un array que se declaro en components
names: string[] = ['Jefer', 'Juli', 'Lili'];

<h2>USO DE *NGFOR</h2>
<ul>
    <li *ngFor=" let name of names">
        {{name}}
    </li>
</ul>


crear un modelo para las variables del objeto de productos 
export interface Product{
  name:string,
  price: number,
  image: string,
  category?: string//dice que categoria puede se obsional con ?
}

este array triene objeto, por lo tanto hay que crear un modelo de datos para poder justificar que siempre cumpla la 
condicion del modelo
products = [
  {
    name: 'EL mejor juguete',
    price: 565,
    image: 'https://source.unsplash.com/random',
    category: 'all',
  },
  {
    name: 'Bicicleta casi nueva',
    price: 356,
    image: 'https://source.unsplash.com/random'
  },]


  =========================================================================
  Uso de *ngSwitch

  se evalua un dato de un objeto y se hace uso de ello


  <h2>Uso de *ngSwitch</h2>
<div [ngSwitch]="persona.name">
    <p *ngSwitchCase="'Jefer'">Es Jeferson</p>
    <p *ngSwitchCase="'Lili'">Es Lili</p>
    <p *ngSwitchCase="'Julian'">Es Julian</p>
    <p *ngSwitchCase="'Isa'">Es Isa</p>
    <p *ngSwitchDefault>No es igual</p>
    
</div>


=========================================================================

Estilos a la lista de productos
los estilos estan en la ruta, se hace uso del compilador de estilos sass

my-store\src\app\app.component.scss



NgClass y NgStyle



============================================
ng build
realiza un compilado de nuestros archivos para hacer deploument 
